{"scope":"PUBLIC","source":"\n\n  DS2_OPTIONS LOGICALEXPR = STANDARD;\n  DS2_OPTIONS SCOND = WARNING;\n  DS2_OPTIONS MISSING_NOTE;\n\n                                                                               \n                     \n  package Decision_21_0  / inline;\n    dcl package logger logr_ppn('App.tk.SID.Ppn');\n    dcl package logger logr_perf('App.tk.SID.Perf');\n    dcl double timer_start;\n    dcl double elapsed_time;\n    dcl double total_timer_start;\n    dcl double total_elapsed_time;\n\n    dcl package \"Decision_2_Rule_set_1_1_0\" \"Decision_2_Rule_set_1_1_0_hdl\"();\n\n     method init();\n\n     end;\n\n    method execute_internal(\n       in_out varchar \"FGJGGJ\"\n      ,in_out double \"PUAN\"\n\n      ,in_out integer \"_filter_\"\n\n    );\n        dcl integer dg_filter_;\n\n       dcl integer _masRC;\n\n        total_timer_start = datetime();\n\n        timer_start = datetime();\n        \"Decision_2_Rule_set_1_1_0_hdl\".execute(\"FGJGGJ\", \"PUAN\");\n\n        elapsed_time = datetime() - timer_start;\n        logr_perf.log( 'd', 'Package Name: Decision_21_0, Node Name: Rule_set_1, Node ID: ab98cf98-aec2-48ce-9e78-b8ed281e1a93, NODE DURATION: ' .. elapsed_time);\n\n        \"end\":                                            \n\n        total_elapsed_time = datetime() - total_timer_start;\n        logr_perf.log( 'd', 'Package Name: Decision_21_0, TOTAL DURATION: ' .. total_elapsed_time);\n\n     end;\n\n    method execute(\n       varchar(100) \"FGJGGJ_\"\n      ,in_out varchar \"FGJGGJ\"\n      ,in_out double \"PUAN\"\n);\n\n      dcl integer _filter_;\n\n          \"FGJGGJ\" = \"FGJGGJ_\";\n\n          execute_internal(\n          \"FGJGGJ\"\n         ,\"PUAN\"\n      ,\"_filter_\"\n      );\n\n    end;\n\n                   \n   endpackage;","properties":[{"name":"sourceURI","value":"/decisions/flows/a5adb055-3de9-45f5-ab1a-f0eefb74aedc/revisions/80aafc20-4a5d-42c5-add5-badd528714ed"}],"submodules":[{"name":"Decision_2_Rule_set_1_1_0","description":"","source":"\n\nds2_options scond=WARNING;\n                                                                               \n\nDS2_OPTIONS LOGICALEXPR = STANDARD;\nDS2_OPTIONS SCOND = WARNING;\nDS2_OPTIONS MISSING_NOTE;\n\n                                                                                                                                                                                                                                                                          \n  package \"Decision_2_Rule_set_1_1_0\"  / inline;\n\n      dcl package logger _logger('App.SASDCM');\n      dcl package logger logr_variableTrace('App.TableServices.DS2.Runtime.TraceVariables');\n\n      dcl varchar(512)   lookup_value;\n\n      dcl varchar(256)   lookup_key;\n      dcl package datagrid lookup_0 ('lookup_0');                                                \n\n                                                                                 \n      forward DataGrid_create;\n      forward DataGrid_FilteredGet;\n      method \"Decision_2_Rule_set_1_1_0\"();\n\n                                                        \n            DataGrid_create(lookup_0, '[{\"metadata\":[{\"key\":\"string\"},{\"value\":\"string\"}]}, {\"data\":[\n[\"key\",\"value1\"]]}]');\n\n      end;\n\n      method getLookupValue() returns varchar(512);\n        return lookup_value;\n      end;\n\n      method doLookupFind(varchar(256) lookupKey, varchar(100) lookupName) returns int;\n        dcl integer rc;\n        rc = 1;\n        lookup_value = '';\n        if ( not missing(lookupKey) ) then do;\n\n                lookup_key = strip(lookupkey);\n\n                select(lookupName);\n                  when('$LQIMOQS5JPNBSVHXXDE3JYSBBQU_K.') lookup_value = DataGrid_FilteredGet(lookup_0, 'value', 'key', 'eq', lookup_key);\n                end;\n\n                if ( not missing(lookup_value) ) then do;\n                  rc = 0;\n                end;\n        end;\n\n        return rc;\n      end;\n\n                                                 \n            method setruleFiredBasePosition(integer newBasePosition); end;\n            method setDecisionNodeID(varchar newDecisonNodeID); end;\n            method enableRuleFiredRecording(); end;\n            method disableRuleFiredRecording(); end;\n            method initRuleFireHashes(); end;\n            method getRuleFiredFlagCount() returns integer;  return 0; end;\n            method recordRuleFired(\n              in_out char    ruleFiredFlags,\n              in_out integer rulesFiredForRecordCount,\n              char(36)       this_rule_id);\n            end;\n\nmethod DataGrid_create(package datagrid aGrid,\nvarchar(10485760) JSONTableString)\nreturns int;\n    dcl int rowCnt;    \n    rowCnt = aGrid.deserialize(JSONTableString);\n    if (rowCnt = 0) then\n        rowCnt = aGrid.rowCount();\n    return rowCnt;    \nend;\n\nmethod DataGrid_FilteredGet(package datagrid aGrid,\nvarchar(255) srcCol,\nvarchar(255) cmpCol,\nchar(2)      cmpOp,\nvarchar(32767) cmpVal)\nreturns varchar;\n    dcl varchar(32767) colVal;\n    colVal = aGrid.filteredGet(cmpCol, cmpOp, cmpVal, srcCol);\n    return colVal;\nend;\n\nmethod DataGrid_FilteredGet(package datagrid aGrid,\nvarchar(255) srcCol,\nvarchar(255) cmpCol,\nchar(2)      cmpOp,\nvarchar(32767) cmpVal,\nint start_row,\nint end_row)\nreturns varchar;\n    dcl varchar(32767) colVal;\n    colVal = aGrid.filteredGet(cmpCol, cmpOp, cmpVal, srcCol,start_row,end_row);\n    return colVal;\nend;\n\n    method execute( in_out varchar \"FGJGGJ\",in_out double \"PUAN\");\n\n;\n         if (0 = doLookupFind(\"FGJGGJ\",'$LQIMOQS5JPNBSVHXXDE3JYSBBQU_K.')) then do;\n         \"PUAN\" = 100.0;\n\n         end;\n\n         \"end_36d58e43-23b3-4891-aa58-d128a98b70a4\":\n\n      rule_end:                                    \n    end;\n\n                                              \n   endpackage;","attributes":{"keyValue":""},"language":"DS2"}]}