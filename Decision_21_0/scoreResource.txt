

ds2_options scond=WARNING;
/* Rule Set Rule_set_1 version 1.0 generated on Fri Feb 23 09:07:44 UTC 2024 */

DS2_OPTIONS LOGICALEXPR = STANDARD;
DS2_OPTIONS SCOND = WARNING;
DS2_OPTIONS MISSING_NOTE;

/* PACKAGE_START: packageName="Decision_2_Rule_set_1_1_0", referencedBy=Decision_2, name=Rule_set_1, nodeId=ab98cf98-aec2-48ce-9e78-b8ed281e1a93, objectUri=/businessRules/ruleSets/9deffbd4-775d-4d76-a604-e401a113a1c3/revisions/0f76f176-1bfe-451e-a1ae-f13f2d054b64 */
  package "Decision_2_Rule_set_1_1_0"  / inline;

      dcl package logger _logger('App.SASDCM');
      dcl package logger logr_variableTrace('App.TableServices.DS2.Runtime.TraceVariables');

      dcl varchar(512)   lookup_value;

      dcl varchar(256)   lookup_key;
      dcl package datagrid lookup_0 ('lookup_0'); /* lookup for $LQIMOQS5JPNBSVHXXDE3JYSBBQU_K */

      /* for inline lookups we initialize datagrids in the package constructor */
      forward DataGrid_create;
      forward DataGrid_FilteredGet;
      method "Decision_2_Rule_set_1_1_0"();

            /* lookup: $LQIMOQS5JPNBSVHXXDE3JYSBBQU_K */
            DataGrid_create(lookup_0, '[{"metadata":[{"key":"string"},{"value":"string"}]}, {"data":[
["key","value1"]]}]');

      end;

      method getLookupValue() returns varchar(512);
        return lookup_value;
      end;

      method doLookupFind(varchar(256) lookupKey, varchar(100) lookupName) returns int;
        dcl integer rc;
        rc = 1;
        lookup_value = '';
        if ( not missing(lookupKey) ) then do;

                lookup_key = strip(lookupkey);

                select(lookupName);
                  when('$LQIMOQS5JPNBSVHXXDE3JYSBBQU_K.') lookup_value = DataGrid_FilteredGet(lookup_0, 'value', 'key', 'eq', lookup_key);
                end;

                if ( not missing(lookup_value) ) then do;
                  rc = 0;
                end;
        end;

        return rc;
      end;

        /* ---- RULE FIRED FLAG COUNT = 0 ---- */
            method setruleFiredBasePosition(integer newBasePosition); end;
            method setDecisionNodeID(varchar newDecisonNodeID); end;
            method enableRuleFiredRecording(); end;
            method disableRuleFiredRecording(); end;
            method initRuleFireHashes(); end;
            method getRuleFiredFlagCount() returns integer;  return 0; end;
            method recordRuleFired(
              in_out char    ruleFiredFlags,
              in_out integer rulesFiredForRecordCount,
              char(36)       this_rule_id);
            end;

method DataGrid_create(package datagrid aGrid,
varchar(10485760) JSONTableString)
returns int;
    dcl int rowCnt;    
    rowCnt = aGrid.deserialize(JSONTableString);
    if (rowCnt = 0) then
        rowCnt = aGrid.rowCount();
    return rowCnt;    
end;

method DataGrid_FilteredGet(package datagrid aGrid,
varchar(255) srcCol,
varchar(255) cmpCol,
char(2)      cmpOp,
varchar(32767) cmpVal)
returns varchar;
    dcl varchar(32767) colVal;
    colVal = aGrid.filteredGet(cmpCol, cmpOp, cmpVal, srcCol);
    return colVal;
end;

method DataGrid_FilteredGet(package datagrid aGrid,
varchar(255) srcCol,
varchar(255) cmpCol,
char(2)      cmpOp,
varchar(32767) cmpVal,
int start_row,
int end_row)
returns varchar;
    dcl varchar(32767) colVal;
    colVal = aGrid.filteredGet(cmpCol, cmpOp, cmpVal, srcCol,start_row,end_row);
    return colVal;
end;

    method execute( in_out varchar "FGJGGJ",in_out double "PUAN");

;
         if (0 = doLookupFind("FGJGGJ",'$LQIMOQS5JPNBSVHXXDE3JYSBBQU_K.')) then do;
         "PUAN" = 100.0;

         end;

         "end_36d58e43-23b3-4891-aa58-d128a98b70a4":

      rule_end:  /* label for rule RETURN action */
    end;

/* PACKAGE_END: "Decision_2_Rule_set_1_1_0" */
  endpackage;

  DS2_OPTIONS LOGICALEXPR = STANDARD;
  DS2_OPTIONS SCOND = WARNING;
  DS2_OPTIONS MISSING_NOTE;

/* Decision Decision_2 version 1.0 generated on Fri Feb 23 09:07:44 UTC 2024 */
/* {PACKAGE_START} */
  package Decision_21_0  / inline;
    dcl package logger logr_ppn('App.tk.SID.Ppn');
    dcl package logger logr_perf('App.tk.SID.Perf');
    dcl double timer_start;
    dcl double elapsed_time;
    dcl double total_timer_start;
    dcl double total_elapsed_time;

    dcl package "Decision_2_Rule_set_1_1_0" "Decision_2_Rule_set_1_1_0_hdl"();

     method init();

     end;

    method execute_internal(
       in_out varchar "FGJGGJ"
      ,in_out double "PUAN"

      ,in_out integer "_filter_"

    );
        dcl integer dg_filter_;

       dcl integer _masRC;

        total_timer_start = datetime();

        timer_start = datetime();
        "Decision_2_Rule_set_1_1_0_hdl".execute("FGJGGJ", "PUAN");

        elapsed_time = datetime() - timer_start;
        logr_perf.log( 'd', 'Package Name: Decision_21_0, Node Name: Rule_set_1, Node ID: ab98cf98-aec2-48ce-9e78-b8ed281e1a93, NODE DURATION: ' .. elapsed_time);

        "end":/*label for decision node link to flow end*/

        total_elapsed_time = datetime() - total_timer_start;
        logr_perf.log( 'd', 'Package Name: Decision_21_0, TOTAL DURATION: ' .. total_elapsed_time);

     end;

    method execute(
       varchar(100) "FGJGGJ_"
      ,in_out varchar "FGJGGJ"
      ,in_out double "PUAN"
);

      dcl integer _filter_;

          "FGJGGJ" = "FGJGGJ_";

          execute_internal(
          "FGJGGJ"
         ,"PUAN"
      ,"_filter_"
      );

    end;

/* {PACKAGE_END} */
  endpackage;
